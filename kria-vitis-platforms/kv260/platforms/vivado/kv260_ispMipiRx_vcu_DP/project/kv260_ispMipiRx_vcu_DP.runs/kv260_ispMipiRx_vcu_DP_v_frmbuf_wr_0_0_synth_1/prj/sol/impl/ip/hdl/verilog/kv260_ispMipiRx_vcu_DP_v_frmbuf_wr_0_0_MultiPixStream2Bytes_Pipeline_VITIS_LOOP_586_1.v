// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module kv260_ispMipiRx_vcu_DP_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_586_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_dout,
        img_num_data_valid,
        img_fifo_cap,
        img_empty_n,
        img_read,
        p_0_4_0_0_0_787_lcssa111,
        p_0_3_0_0_0_778_lcssa108,
        p_0_1_0_0_0_760_lcssa102,
        p_0_0_0_0_0_751_lcssa99,
        trunc_ln571_1,
        bytePlanes_plane12_din,
        bytePlanes_plane12_num_data_valid,
        bytePlanes_plane12_fifo_cap,
        bytePlanes_plane12_full_n,
        bytePlanes_plane12_write,
        bytePlanes_plane01_din,
        bytePlanes_plane01_num_data_valid,
        bytePlanes_plane01_fifo_cap,
        bytePlanes_plane01_full_n,
        bytePlanes_plane01_write,
        brmerge42,
        icmp_ln576,
        cmp53_6,
        cmp53_5,
        cmp53_4,
        cmp53_3,
        cmp53_2,
        cmp53_1,
        sub50_cast38,
        cmp53,
        p_0_4_0_0_0_786_out,
        p_0_4_0_0_0_786_out_ap_vld,
        p_0_3_0_0_0_777_out,
        p_0_3_0_0_0_777_out_ap_vld,
        p_0_1_0_0_0_759_out,
        p_0_1_0_0_0_759_out_ap_vld,
        p_0_0_0_0_0_750_out,
        p_0_0_0_0_0_750_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [47:0] img_dout;
input  [1:0] img_num_data_valid;
input  [1:0] img_fifo_cap;
input   img_empty_n;
output   img_read;
input  [7:0] p_0_4_0_0_0_787_lcssa111;
input  [7:0] p_0_3_0_0_0_778_lcssa108;
input  [7:0] p_0_1_0_0_0_760_lcssa102;
input  [7:0] p_0_0_0_0_0_751_lcssa99;
input  [11:0] trunc_ln571_1;
output  [127:0] bytePlanes_plane12_din;
input  [9:0] bytePlanes_plane12_num_data_valid;
input  [9:0] bytePlanes_plane12_fifo_cap;
input   bytePlanes_plane12_full_n;
output   bytePlanes_plane12_write;
output  [127:0] bytePlanes_plane01_din;
input  [9:0] bytePlanes_plane01_num_data_valid;
input  [9:0] bytePlanes_plane01_fifo_cap;
input   bytePlanes_plane01_full_n;
output   bytePlanes_plane01_write;
input  [0:0] brmerge42;
input  [0:0] icmp_ln576;
input  [0:0] cmp53_6;
input  [0:0] cmp53_5;
input  [0:0] cmp53_4;
input  [0:0] cmp53_3;
input  [0:0] cmp53_2;
input  [0:0] cmp53_1;
input  [11:0] sub50_cast38;
input  [0:0] cmp53;
output  [7:0] p_0_4_0_0_0_786_out;
output   p_0_4_0_0_0_786_out_ap_vld;
output  [7:0] p_0_3_0_0_0_777_out;
output   p_0_3_0_0_0_777_out_ap_vld;
output  [7:0] p_0_1_0_0_0_759_out;
output   p_0_1_0_0_0_759_out_ap_vld;
output  [7:0] p_0_0_0_0_0_750_out;
output   p_0_0_0_0_0_750_out_ap_vld;

reg ap_idle;
reg img_read;
reg bytePlanes_plane12_write;
reg bytePlanes_plane01_write;
reg p_0_4_0_0_0_786_out_ap_vld;
reg p_0_3_0_0_0_777_out_ap_vld;
reg p_0_1_0_0_0_759_out_ap_vld;
reg p_0_0_0_0_0_750_out_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
reg   [0:0] icmp_ln586_reg_992;
reg   [0:0] or_ln590_1_reg_1016;
reg    ap_predicate_op69_read_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_subdone;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage7;
reg   [0:0] or_ln590_6_reg_1071;
reg    ap_predicate_op130_read_state8;
reg    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_subdone;
reg    bytePlanes_plane12_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    bytePlanes_plane01_blk_n;
reg    img_blk_n;
reg   [0:0] or_ln590_reg_1007;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] or_ln590_2_reg_1045;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [0:0] or_ln590_3_reg_1054;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [0:0] or_ln590_4_reg_1063;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
reg   [0:0] or_ln590_5_reg_1067;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage0;
reg   [0:0] or_ln590_7_reg_1075;
reg   [7:0] p_0_4_0_0_0_785_reg_236;
reg   [7:0] p_0_3_0_0_0_776_reg_246;
reg   [7:0] p_0_1_0_0_0_758_reg_256;
reg   [7:0] p_0_0_0_0_0_749_reg_266;
reg   [7:0] p_0_4_0_0_0_784_reg_276;
reg   [7:0] p_0_3_0_0_0_775_reg_287;
reg   [7:0] p_0_1_0_0_0_757_reg_298;
reg   [7:0] p_0_0_0_0_0_748_reg_309;
reg   [7:0] p_0_4_0_0_0_783_reg_320;
reg   [7:0] p_0_3_0_0_0_774_reg_331;
reg   [7:0] p_0_1_0_0_0_756_reg_342;
reg   [7:0] p_0_0_0_0_0_747_reg_353;
reg   [7:0] p_0_4_0_0_0_782_reg_364;
reg   [7:0] p_0_3_0_0_0_773_reg_375;
reg   [7:0] p_0_1_0_0_0_755_reg_386;
reg   [7:0] p_0_0_0_0_0_746_reg_397;
reg   [7:0] p_0_4_0_0_0_781_reg_408;
reg   [7:0] p_0_3_0_0_0_772_reg_419;
reg   [7:0] p_0_1_0_0_0_754_reg_430;
reg   [7:0] p_0_0_0_0_0_745_reg_441;
reg   [7:0] p_0_4_0_0_0_780_reg_452;
reg   [7:0] p_0_3_0_0_0_771_reg_463;
reg   [7:0] p_0_1_0_0_0_753_reg_474;
reg   [7:0] p_0_0_0_0_0_744_reg_485;
reg    ap_predicate_op54_read_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state10_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg    ap_predicate_op93_read_state5;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_pp0_stage2_11001;
reg    ap_predicate_op108_read_state6;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_predicate_op141_read_state9;
reg    ap_block_state9_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    ap_predicate_op81_read_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg    ap_predicate_op119_read_state7;
reg    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
wire   [0:0] icmp_ln586_fu_695_p2;
reg   [0:0] icmp_ln586_reg_992_pp0_iter1_reg;
wire   [0:0] cmp51_fu_711_p2;
reg   [0:0] cmp51_reg_996;
wire   [0:0] or_ln590_fu_717_p2;
wire   [7:0] trunc_ln145_fu_728_p1;
wire   [0:0] or_ln590_1_fu_732_p2;
wire   [7:0] trunc_ln145_4_fu_748_p1;
wire   [0:0] or_ln590_2_fu_752_p2;
wire   [7:0] trunc_ln145_5_fu_756_p1;
wire   [0:0] or_ln590_3_fu_760_p2;
wire   [7:0] trunc_ln145_8_fu_764_p1;
wire   [0:0] or_ln590_4_fu_768_p2;
wire   [0:0] or_ln590_5_fu_772_p2;
wire   [0:0] or_ln590_6_fu_776_p2;
wire   [0:0] or_ln590_7_fu_780_p2;
wire   [7:0] trunc_ln145_11_fu_784_p1;
wire   [7:0] trunc_ln145_14_fu_788_p1;
wire   [7:0] trunc_ln145_17_fu_792_p1;
reg    ap_block_pp0_stage7_11001;
wire   [7:0] trunc_ln145_20_fu_796_p1;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage1_subdone;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_4_0_0_0_785_reg_236;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_3_0_0_0_776_reg_246;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_1_0_0_0_758_reg_256;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_0_0_0_0_749_reg_266;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_4_0_0_0_784_reg_276;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_3_0_0_0_775_reg_287;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_1_0_0_0_757_reg_298;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_0_0_0_0_748_reg_309;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_4_0_0_0_783_reg_320;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_3_0_0_0_774_reg_331;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_1_0_0_0_756_reg_342;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_0_0_0_0_747_reg_353;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_4_0_0_0_782_reg_364;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_3_0_0_0_773_reg_375;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_1_0_0_0_755_reg_386;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_0_0_0_0_746_reg_397;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_4_0_0_0_781_reg_408;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_3_0_0_0_772_reg_419;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_1_0_0_0_754_reg_430;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_0_0_0_0_745_reg_441;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_4_0_0_0_780_reg_452;
reg   [7:0] ap_phi_reg_pp0_iter1_p_0_4_0_0_0_780_reg_452;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_3_0_0_0_771_reg_463;
reg   [7:0] ap_phi_reg_pp0_iter1_p_0_3_0_0_0_771_reg_463;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_1_0_0_0_753_reg_474;
reg   [7:0] ap_phi_reg_pp0_iter1_p_0_1_0_0_0_753_reg_474;
reg   [7:0] ap_phi_reg_pp0_iter0_p_0_0_0_0_0_744_reg_485;
reg   [7:0] ap_phi_reg_pp0_iter1_p_0_0_0_0_0_744_reg_485;
wire   [7:0] ap_phi_reg_pp0_iter0_p_0_4_0_0_0_779_reg_496;
reg   [7:0] ap_phi_reg_pp0_iter1_p_0_4_0_0_0_779_reg_496;
wire   [7:0] ap_phi_reg_pp0_iter0_p_0_3_0_0_0_770_reg_506;
reg   [7:0] ap_phi_reg_pp0_iter1_p_0_3_0_0_0_770_reg_506;
wire   [7:0] ap_phi_reg_pp0_iter0_p_0_1_0_0_0_752_reg_516;
reg   [7:0] ap_phi_reg_pp0_iter1_p_0_1_0_0_0_752_reg_516;
wire   [7:0] ap_phi_reg_pp0_iter0_p_0_0_0_0_0_743_reg_526;
reg   [7:0] ap_phi_reg_pp0_iter1_p_0_0_0_0_0_743_reg_526;
reg   [7:0] ap_phi_mux_p_0_4_0_0_0_787_phi_fu_539_p4;
wire   [7:0] ap_phi_reg_pp0_iter0_p_0_4_0_0_0_787_reg_536;
reg   [7:0] ap_phi_reg_pp0_iter1_p_0_4_0_0_0_787_reg_536;
reg   [7:0] ap_phi_mux_p_0_3_0_0_0_778_phi_fu_549_p4;
wire   [7:0] ap_phi_reg_pp0_iter0_p_0_3_0_0_0_778_reg_546;
reg   [7:0] ap_phi_reg_pp0_iter1_p_0_3_0_0_0_778_reg_546;
reg   [7:0] ap_phi_mux_p_0_1_0_0_0_760_phi_fu_559_p4;
wire   [7:0] ap_phi_reg_pp0_iter0_p_0_1_0_0_0_760_reg_556;
reg   [7:0] ap_phi_reg_pp0_iter1_p_0_1_0_0_0_760_reg_556;
reg   [7:0] ap_phi_mux_p_0_0_0_0_0_751_phi_fu_569_p4;
wire   [7:0] ap_phi_reg_pp0_iter0_p_0_0_0_0_0_751_reg_566;
reg   [7:0] ap_phi_reg_pp0_iter1_p_0_0_0_0_0_751_reg_566;
reg   [11:0] x_fu_106;
wire   [11:0] x_2_fu_701_p2;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_x_1;
reg   [7:0] p_0_0_0_0_0_750_fu_110;
reg   [7:0] p_0_1_0_0_0_759_fu_114;
reg   [7:0] p_0_3_0_0_0_777_fu_118;
reg   [7:0] p_0_4_0_0_0_786_fu_122;
reg    ap_block_pp0_stage1_01001;
wire   [12:0] zext_ln586_fu_707_p1;
wire  signed [12:0] sub50_cast38_cast_fu_663_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_865;
reg    ap_condition_868;
reg    ap_condition_871;
reg    ap_condition_874;
reg    ap_condition_877;
reg    ap_condition_880;
reg    ap_condition_884;
reg    ap_condition_888;
reg    ap_condition_891;
reg    ap_condition_894;
reg    ap_condition_476;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

kv260_ispMipiRx_vcu_DP_v_frmbuf_wr_0_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_868)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0_745_reg_441 <= ap_phi_reg_pp0_iter0_p_0_0_0_0_0_746_reg_397;
        end else if ((1'b1 == ap_condition_865)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0_745_reg_441 <= trunc_ln145_11_fu_784_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_874)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0_746_reg_397 <= ap_phi_reg_pp0_iter0_p_0_0_0_0_0_747_reg_353;
        end else if ((1'b1 == ap_condition_871)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0_746_reg_397 <= trunc_ln145_8_fu_764_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_880)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0_747_reg_353 <= ap_phi_reg_pp0_iter0_p_0_0_0_0_0_748_reg_309;
        end else if ((1'b1 == ap_condition_877)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0_747_reg_353 <= trunc_ln145_5_fu_756_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_888)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0_748_reg_309 <= ap_phi_reg_pp0_iter0_p_0_0_0_0_0_749_reg_266;
        end else if ((1'b1 == ap_condition_884)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0_748_reg_309 <= trunc_ln145_4_fu_748_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_894)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0_749_reg_266 <= p_0_0_0_0_0_750_fu_110;
        end else if ((1'b1 == ap_condition_891)) begin
            ap_phi_reg_pp0_iter0_p_0_0_0_0_0_749_reg_266 <= trunc_ln145_fu_728_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_868)) begin
            ap_phi_reg_pp0_iter0_p_0_1_0_0_0_754_reg_430 <= ap_phi_reg_pp0_iter0_p_0_1_0_0_0_755_reg_386;
        end else if ((1'b1 == ap_condition_865)) begin
            ap_phi_reg_pp0_iter0_p_0_1_0_0_0_754_reg_430 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_874)) begin
            ap_phi_reg_pp0_iter0_p_0_1_0_0_0_755_reg_386 <= ap_phi_reg_pp0_iter0_p_0_1_0_0_0_756_reg_342;
        end else if ((1'b1 == ap_condition_871)) begin
            ap_phi_reg_pp0_iter0_p_0_1_0_0_0_755_reg_386 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_880)) begin
            ap_phi_reg_pp0_iter0_p_0_1_0_0_0_756_reg_342 <= ap_phi_reg_pp0_iter0_p_0_1_0_0_0_757_reg_298;
        end else if ((1'b1 == ap_condition_877)) begin
            ap_phi_reg_pp0_iter0_p_0_1_0_0_0_756_reg_342 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_888)) begin
            ap_phi_reg_pp0_iter0_p_0_1_0_0_0_757_reg_298 <= ap_phi_reg_pp0_iter0_p_0_1_0_0_0_758_reg_256;
        end else if ((1'b1 == ap_condition_884)) begin
            ap_phi_reg_pp0_iter0_p_0_1_0_0_0_757_reg_298 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_894)) begin
            ap_phi_reg_pp0_iter0_p_0_1_0_0_0_758_reg_256 <= p_0_1_0_0_0_759_fu_114;
        end else if ((1'b1 == ap_condition_891)) begin
            ap_phi_reg_pp0_iter0_p_0_1_0_0_0_758_reg_256 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_868)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0_772_reg_419 <= ap_phi_reg_pp0_iter0_p_0_3_0_0_0_773_reg_375;
        end else if ((1'b1 == ap_condition_865)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0_772_reg_419 <= {{img_dout[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_874)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0_773_reg_375 <= ap_phi_reg_pp0_iter0_p_0_3_0_0_0_774_reg_331;
        end else if ((1'b1 == ap_condition_871)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0_773_reg_375 <= {{img_dout[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_880)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0_774_reg_331 <= ap_phi_reg_pp0_iter0_p_0_3_0_0_0_775_reg_287;
        end else if ((1'b1 == ap_condition_877)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0_774_reg_331 <= {{img_dout[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_888)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0_775_reg_287 <= ap_phi_reg_pp0_iter0_p_0_3_0_0_0_776_reg_246;
        end else if ((1'b1 == ap_condition_884)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0_775_reg_287 <= {{img_dout[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_894)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0_776_reg_246 <= p_0_3_0_0_0_777_fu_118;
        end else if ((1'b1 == ap_condition_891)) begin
            ap_phi_reg_pp0_iter0_p_0_3_0_0_0_776_reg_246 <= {{img_dout[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_868)) begin
            ap_phi_reg_pp0_iter0_p_0_4_0_0_0_781_reg_408 <= ap_phi_reg_pp0_iter0_p_0_4_0_0_0_782_reg_364;
        end else if ((1'b1 == ap_condition_865)) begin
            ap_phi_reg_pp0_iter0_p_0_4_0_0_0_781_reg_408 <= {{img_dout[39:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_874)) begin
            ap_phi_reg_pp0_iter0_p_0_4_0_0_0_782_reg_364 <= ap_phi_reg_pp0_iter0_p_0_4_0_0_0_783_reg_320;
        end else if ((1'b1 == ap_condition_871)) begin
            ap_phi_reg_pp0_iter0_p_0_4_0_0_0_782_reg_364 <= {{img_dout[39:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_880)) begin
            ap_phi_reg_pp0_iter0_p_0_4_0_0_0_783_reg_320 <= ap_phi_reg_pp0_iter0_p_0_4_0_0_0_784_reg_276;
        end else if ((1'b1 == ap_condition_877)) begin
            ap_phi_reg_pp0_iter0_p_0_4_0_0_0_783_reg_320 <= {{img_dout[39:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_888)) begin
            ap_phi_reg_pp0_iter0_p_0_4_0_0_0_784_reg_276 <= ap_phi_reg_pp0_iter0_p_0_4_0_0_0_785_reg_236;
        end else if ((1'b1 == ap_condition_884)) begin
            ap_phi_reg_pp0_iter0_p_0_4_0_0_0_784_reg_276 <= {{img_dout[39:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_894)) begin
            ap_phi_reg_pp0_iter0_p_0_4_0_0_0_785_reg_236 <= p_0_4_0_0_0_786_fu_122;
        end else if ((1'b1 == ap_condition_891)) begin
            ap_phi_reg_pp0_iter0_p_0_4_0_0_0_785_reg_236 <= {{img_dout[39:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln590_6_reg_1071 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_0_0_0_0_0_743_reg_526 <= ap_phi_reg_pp0_iter1_p_0_0_0_0_0_744_reg_485;
    end else if (((or_ln590_6_reg_1071 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_p_0_0_0_0_0_743_reg_526 <= trunc_ln145_17_fu_792_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_p_0_0_0_0_0_743_reg_526 <= ap_phi_reg_pp0_iter0_p_0_0_0_0_0_743_reg_526;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_476)) begin
        if (((icmp_ln586_reg_992 == 1'd0) & (or_ln590_5_reg_1067 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_0_0_0_0_0_744_reg_485 <= ap_phi_reg_pp0_iter0_p_0_0_0_0_0_745_reg_441;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_0_0_0_0_0_744_reg_485 <= ap_phi_reg_pp0_iter0_p_0_0_0_0_0_744_reg_485;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln590_7_reg_1075 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_0_0_0_0_0_751_reg_566 <= trunc_ln145_20_fu_796_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_p_0_0_0_0_0_751_reg_566 <= ap_phi_reg_pp0_iter0_p_0_0_0_0_0_751_reg_566;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln590_6_reg_1071 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_0_1_0_0_0_752_reg_516 <= ap_phi_reg_pp0_iter1_p_0_1_0_0_0_753_reg_474;
    end else if (((or_ln590_6_reg_1071 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_p_0_1_0_0_0_752_reg_516 <= {{img_dout[15:8]}};
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_p_0_1_0_0_0_752_reg_516 <= ap_phi_reg_pp0_iter0_p_0_1_0_0_0_752_reg_516;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_476)) begin
        if (((icmp_ln586_reg_992 == 1'd0) & (or_ln590_5_reg_1067 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_0_1_0_0_0_753_reg_474 <= ap_phi_reg_pp0_iter0_p_0_1_0_0_0_754_reg_430;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_0_1_0_0_0_753_reg_474 <= ap_phi_reg_pp0_iter0_p_0_1_0_0_0_753_reg_474;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln590_7_reg_1075 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_0_1_0_0_0_760_reg_556 <= {{img_dout[15:8]}};
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_p_0_1_0_0_0_760_reg_556 <= ap_phi_reg_pp0_iter0_p_0_1_0_0_0_760_reg_556;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln590_6_reg_1071 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_0_3_0_0_0_770_reg_506 <= ap_phi_reg_pp0_iter1_p_0_3_0_0_0_771_reg_463;
    end else if (((or_ln590_6_reg_1071 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_p_0_3_0_0_0_770_reg_506 <= {{img_dout[31:24]}};
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_p_0_3_0_0_0_770_reg_506 <= ap_phi_reg_pp0_iter0_p_0_3_0_0_0_770_reg_506;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_476)) begin
        if (((icmp_ln586_reg_992 == 1'd0) & (or_ln590_5_reg_1067 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_0_3_0_0_0_771_reg_463 <= ap_phi_reg_pp0_iter0_p_0_3_0_0_0_772_reg_419;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_0_3_0_0_0_771_reg_463 <= ap_phi_reg_pp0_iter0_p_0_3_0_0_0_771_reg_463;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln590_7_reg_1075 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_0_3_0_0_0_778_reg_546 <= {{img_dout[31:24]}};
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_p_0_3_0_0_0_778_reg_546 <= ap_phi_reg_pp0_iter0_p_0_3_0_0_0_778_reg_546;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln590_6_reg_1071 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_0_4_0_0_0_779_reg_496 <= ap_phi_reg_pp0_iter1_p_0_4_0_0_0_780_reg_452;
    end else if (((or_ln590_6_reg_1071 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_p_0_4_0_0_0_779_reg_496 <= {{img_dout[39:32]}};
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_p_0_4_0_0_0_779_reg_496 <= ap_phi_reg_pp0_iter0_p_0_4_0_0_0_779_reg_496;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_476)) begin
        if (((icmp_ln586_reg_992 == 1'd0) & (or_ln590_5_reg_1067 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_0_4_0_0_0_780_reg_452 <= ap_phi_reg_pp0_iter0_p_0_4_0_0_0_781_reg_408;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_0_4_0_0_0_780_reg_452 <= ap_phi_reg_pp0_iter0_p_0_4_0_0_0_780_reg_452;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln590_7_reg_1075 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_p_0_4_0_0_0_787_reg_536 <= {{img_dout[39:32]}};
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_p_0_4_0_0_0_787_reg_536 <= ap_phi_reg_pp0_iter0_p_0_4_0_0_0_787_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_0_0_0_0_750_fu_110 <= p_0_0_0_0_0_751_lcssa99;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_0_0_0_0_0_750_fu_110 <= ap_phi_mux_p_0_0_0_0_0_751_phi_fu_569_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_1_0_0_0_759_fu_114 <= p_0_1_0_0_0_760_lcssa102;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_0_1_0_0_0_759_fu_114 <= ap_phi_mux_p_0_1_0_0_0_760_phi_fu_559_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_3_0_0_0_777_fu_118 <= p_0_3_0_0_0_778_lcssa108;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_0_3_0_0_0_777_fu_118 <= ap_phi_mux_p_0_3_0_0_0_778_phi_fu_549_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_4_0_0_0_786_fu_122 <= p_0_4_0_0_0_787_lcssa111;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_0_4_0_0_0_786_fu_122 <= ap_phi_mux_p_0_4_0_0_0_787_phi_fu_539_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln586_fu_695_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_106 <= x_2_fu_701_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_106 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln590_5_reg_1067 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_phi_reg_pp0_iter0_p_0_0_0_0_0_744_reg_485 <= trunc_ln145_14_fu_788_p1;
        ap_phi_reg_pp0_iter0_p_0_1_0_0_0_753_reg_474 <= {{img_dout[15:8]}};
        ap_phi_reg_pp0_iter0_p_0_3_0_0_0_771_reg_463 <= {{img_dout[31:24]}};
        ap_phi_reg_pp0_iter0_p_0_4_0_0_0_780_reg_452 <= {{img_dout[39:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln586_fu_695_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp51_reg_996 <= cmp51_fu_711_p2;
        or_ln590_reg_1007 <= or_ln590_fu_717_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln586_reg_992 <= icmp_ln586_fu_695_p2;
        icmp_ln586_reg_992_pp0_iter1_reg <= icmp_ln586_reg_992;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln586_reg_992 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        or_ln590_1_reg_1016 <= or_ln590_1_fu_732_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln586_reg_992 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        or_ln590_2_reg_1045 <= or_ln590_2_fu_752_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln586_reg_992 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        or_ln590_3_reg_1054 <= or_ln590_3_fu_760_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln586_reg_992 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        or_ln590_4_reg_1063 <= or_ln590_4_fu_768_p2;
        or_ln590_5_reg_1067 <= or_ln590_5_fu_772_p2;
        or_ln590_6_reg_1071 <= or_ln590_6_fu_776_p2;
        or_ln590_7_reg_1075 <= or_ln590_7_fu_780_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_0_0_0_0_744_reg_485 <= ap_phi_reg_pp0_iter1_p_0_0_0_0_0_744_reg_485;
        p_0_1_0_0_0_753_reg_474 <= ap_phi_reg_pp0_iter1_p_0_1_0_0_0_753_reg_474;
        p_0_3_0_0_0_771_reg_463 <= ap_phi_reg_pp0_iter1_p_0_3_0_0_0_771_reg_463;
        p_0_4_0_0_0_780_reg_452 <= ap_phi_reg_pp0_iter1_p_0_4_0_0_0_780_reg_452;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        p_0_0_0_0_0_745_reg_441 <= ap_phi_reg_pp0_iter0_p_0_0_0_0_0_745_reg_441;
        p_0_1_0_0_0_754_reg_430 <= ap_phi_reg_pp0_iter0_p_0_1_0_0_0_754_reg_430;
        p_0_3_0_0_0_772_reg_419 <= ap_phi_reg_pp0_iter0_p_0_3_0_0_0_772_reg_419;
        p_0_4_0_0_0_781_reg_408 <= ap_phi_reg_pp0_iter0_p_0_4_0_0_0_781_reg_408;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        p_0_0_0_0_0_746_reg_397 <= ap_phi_reg_pp0_iter0_p_0_0_0_0_0_746_reg_397;
        p_0_1_0_0_0_755_reg_386 <= ap_phi_reg_pp0_iter0_p_0_1_0_0_0_755_reg_386;
        p_0_3_0_0_0_773_reg_375 <= ap_phi_reg_pp0_iter0_p_0_3_0_0_0_773_reg_375;
        p_0_4_0_0_0_782_reg_364 <= ap_phi_reg_pp0_iter0_p_0_4_0_0_0_782_reg_364;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        p_0_0_0_0_0_747_reg_353 <= ap_phi_reg_pp0_iter0_p_0_0_0_0_0_747_reg_353;
        p_0_1_0_0_0_756_reg_342 <= ap_phi_reg_pp0_iter0_p_0_1_0_0_0_756_reg_342;
        p_0_3_0_0_0_774_reg_331 <= ap_phi_reg_pp0_iter0_p_0_3_0_0_0_774_reg_331;
        p_0_4_0_0_0_783_reg_320 <= ap_phi_reg_pp0_iter0_p_0_4_0_0_0_783_reg_320;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        p_0_0_0_0_0_748_reg_309 <= ap_phi_reg_pp0_iter0_p_0_0_0_0_0_748_reg_309;
        p_0_1_0_0_0_757_reg_298 <= ap_phi_reg_pp0_iter0_p_0_1_0_0_0_757_reg_298;
        p_0_3_0_0_0_775_reg_287 <= ap_phi_reg_pp0_iter0_p_0_3_0_0_0_775_reg_287;
        p_0_4_0_0_0_784_reg_276 <= ap_phi_reg_pp0_iter0_p_0_4_0_0_0_784_reg_276;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        p_0_0_0_0_0_749_reg_266 <= ap_phi_reg_pp0_iter0_p_0_0_0_0_0_749_reg_266;
        p_0_1_0_0_0_758_reg_256 <= ap_phi_reg_pp0_iter0_p_0_1_0_0_0_758_reg_256;
        p_0_3_0_0_0_776_reg_246 <= ap_phi_reg_pp0_iter0_p_0_3_0_0_0_776_reg_246;
        p_0_4_0_0_0_785_reg_236 <= ap_phi_reg_pp0_iter0_p_0_4_0_0_0_785_reg_236;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (icmp_ln586_reg_992 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln586_reg_992_pp0_iter1_reg == 1'd0) & (or_ln590_7_reg_1075 == 1'd0))) begin
        ap_phi_mux_p_0_0_0_0_0_751_phi_fu_569_p4 = ap_phi_reg_pp0_iter1_p_0_0_0_0_0_743_reg_526;
    end else begin
        ap_phi_mux_p_0_0_0_0_0_751_phi_fu_569_p4 = ap_phi_reg_pp0_iter1_p_0_0_0_0_0_751_reg_566;
    end
end

always @ (*) begin
    if (((icmp_ln586_reg_992_pp0_iter1_reg == 1'd0) & (or_ln590_7_reg_1075 == 1'd0))) begin
        ap_phi_mux_p_0_1_0_0_0_760_phi_fu_559_p4 = ap_phi_reg_pp0_iter1_p_0_1_0_0_0_752_reg_516;
    end else begin
        ap_phi_mux_p_0_1_0_0_0_760_phi_fu_559_p4 = ap_phi_reg_pp0_iter1_p_0_1_0_0_0_760_reg_556;
    end
end

always @ (*) begin
    if (((icmp_ln586_reg_992_pp0_iter1_reg == 1'd0) & (or_ln590_7_reg_1075 == 1'd0))) begin
        ap_phi_mux_p_0_3_0_0_0_778_phi_fu_549_p4 = ap_phi_reg_pp0_iter1_p_0_3_0_0_0_770_reg_506;
    end else begin
        ap_phi_mux_p_0_3_0_0_0_778_phi_fu_549_p4 = ap_phi_reg_pp0_iter1_p_0_3_0_0_0_778_reg_546;
    end
end

always @ (*) begin
    if (((icmp_ln586_reg_992_pp0_iter1_reg == 1'd0) & (or_ln590_7_reg_1075 == 1'd0))) begin
        ap_phi_mux_p_0_4_0_0_0_787_phi_fu_539_p4 = ap_phi_reg_pp0_iter1_p_0_4_0_0_0_779_reg_496;
    end else begin
        ap_phi_mux_p_0_4_0_0_0_787_phi_fu_539_p4 = ap_phi_reg_pp0_iter1_p_0_4_0_0_0_787_reg_536;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_1 = 12'd0;
    end else begin
        ap_sig_allocacmp_x_1 = x_fu_106;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_plane01_blk_n = bytePlanes_plane01_full_n;
    end else begin
        bytePlanes_plane01_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_plane01_write = 1'b1;
    end else begin
        bytePlanes_plane01_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (brmerge42 == 1'd1))) begin
        bytePlanes_plane12_blk_n = bytePlanes_plane12_full_n;
    end else begin
        bytePlanes_plane12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (brmerge42 == 1'd1))) begin
        bytePlanes_plane12_write = 1'b1;
    end else begin
        bytePlanes_plane12_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op130_read_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage0) & (icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln590_7_reg_1075 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6) & (icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln590_5_reg_1067 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln590_4_reg_1063 == 1'd1)) | ((1'b0 == ap_block_pp0_stage4) & (icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln590_3_reg_1054 == 1'd1)) | ((1'b0 == ap_block_pp0_stage3) & (icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln590_2_reg_1045 == 1'd1)) | ((1'b0 == ap_block_pp0_stage2) & (ap_predicate_op69_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln586_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_ln590_reg_1007 == 1'd1)))) begin
        img_blk_n = img_empty_n;
    end else begin
        img_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op130_read_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_predicate_op119_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_predicate_op81_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op141_read_state9 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_predicate_op108_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op69_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_predicate_op93_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op54_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        img_read = 1'b1;
    end else begin
        img_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln586_reg_992 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_0_0_0_0_0_750_out_ap_vld = 1'b1;
    end else begin
        p_0_0_0_0_0_750_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln586_reg_992 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_0_1_0_0_0_759_out_ap_vld = 1'b1;
    end else begin
        p_0_1_0_0_0_759_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln586_reg_992 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_0_3_0_0_0_777_out_ap_vld = 1'b1;
    end else begin
        p_0_3_0_0_0_777_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln586_reg_992 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_0_4_0_0_0_786_out_ap_vld = 1'b1;
    end else begin
        p_0_4_0_0_0_786_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op141_read_state9 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op141_read_state9 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((img_empty_n == 1'b0) & (ap_predicate_op54_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((bytePlanes_plane01_full_n == 1'b0) | ((bytePlanes_plane12_full_n == 1'b0) & (brmerge42 == 1'd1)))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((img_empty_n == 1'b0) & (ap_predicate_op54_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((bytePlanes_plane01_full_n == 1'b0) | ((bytePlanes_plane12_full_n == 1'b0) & (brmerge42 == 1'd1)))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((img_empty_n == 1'b0) & (ap_predicate_op54_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((bytePlanes_plane01_full_n == 1'b0) | ((bytePlanes_plane12_full_n == 1'b0) & (brmerge42 == 1'd1)))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_predicate_op69_read_state3 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_predicate_op69_read_state3 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op81_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op81_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op93_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op93_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op108_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op108_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op119_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op119_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_predicate_op130_read_state8 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_predicate_op130_read_state8 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter1 = ((bytePlanes_plane01_full_n == 1'b0) | ((bytePlanes_plane12_full_n == 1'b0) & (brmerge42 == 1'd1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op54_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((ap_predicate_op69_read_state3 == 1'b1) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op81_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op93_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op108_read_state6 == 1'b1));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op119_read_state7 == 1'b1));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0 = ((ap_predicate_op130_read_state8 == 1'b1) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter1 = ((img_empty_n == 1'b0) & (ap_predicate_op141_read_state9 == 1'b1));
end

always @ (*) begin
    ap_condition_476 = ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7));
end

always @ (*) begin
    ap_condition_865 = ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln590_4_reg_1063 == 1'd1));
end

always @ (*) begin
    ap_condition_868 = ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (or_ln590_4_reg_1063 == 1'd0));
end

always @ (*) begin
    ap_condition_871 = ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln590_3_reg_1054 == 1'd1));
end

always @ (*) begin
    ap_condition_874 = ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln590_3_reg_1054 == 1'd0));
end

always @ (*) begin
    ap_condition_877 = ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln590_2_reg_1045 == 1'd1));
end

always @ (*) begin
    ap_condition_880 = ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln590_2_reg_1045 == 1'd0));
end

always @ (*) begin
    ap_condition_884 = ((1'b0 == ap_block_pp0_stage2_11001) & (or_ln590_1_reg_1016 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_888 = ((1'b0 == ap_block_pp0_stage3_11001) & (or_ln590_1_reg_1016 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_891 = ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_ln590_reg_1007 == 1'd1));
end

always @ (*) begin
    ap_condition_894 = ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln590_reg_1007 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign ap_phi_reg_pp0_iter0_p_0_0_0_0_0_743_reg_526 = 'bx;

assign ap_phi_reg_pp0_iter0_p_0_0_0_0_0_751_reg_566 = 'bx;

assign ap_phi_reg_pp0_iter0_p_0_1_0_0_0_752_reg_516 = 'bx;

assign ap_phi_reg_pp0_iter0_p_0_1_0_0_0_760_reg_556 = 'bx;

assign ap_phi_reg_pp0_iter0_p_0_3_0_0_0_770_reg_506 = 'bx;

assign ap_phi_reg_pp0_iter0_p_0_3_0_0_0_778_reg_546 = 'bx;

assign ap_phi_reg_pp0_iter0_p_0_4_0_0_0_779_reg_496 = 'bx;

assign ap_phi_reg_pp0_iter0_p_0_4_0_0_0_787_reg_536 = 'bx;

always @ (*) begin
    ap_predicate_op108_read_state6 = ((icmp_ln586_reg_992 == 1'd0) & (or_ln590_4_reg_1063 == 1'd1));
end

always @ (*) begin
    ap_predicate_op119_read_state7 = ((icmp_ln586_reg_992 == 1'd0) & (or_ln590_5_reg_1067 == 1'd1));
end

always @ (*) begin
    ap_predicate_op130_read_state8 = ((or_ln590_6_reg_1071 == 1'd1) & (icmp_ln586_reg_992 == 1'd0));
end

always @ (*) begin
    ap_predicate_op141_read_state9 = ((icmp_ln586_reg_992 == 1'd0) & (or_ln590_7_reg_1075 == 1'd1));
end

always @ (*) begin
    ap_predicate_op54_read_state2 = ((icmp_ln586_reg_992 == 1'd0) & (or_ln590_reg_1007 == 1'd1));
end

always @ (*) begin
    ap_predicate_op69_read_state3 = ((or_ln590_1_reg_1016 == 1'd1) & (icmp_ln586_reg_992 == 1'd0));
end

always @ (*) begin
    ap_predicate_op81_read_state4 = ((icmp_ln586_reg_992 == 1'd0) & (or_ln590_2_reg_1045 == 1'd1));
end

always @ (*) begin
    ap_predicate_op93_read_state5 = ((icmp_ln586_reg_992 == 1'd0) & (or_ln590_3_reg_1054 == 1'd1));
end

assign bytePlanes_plane01_din = {{{{{{{{{{{{{{{{ap_phi_mux_p_0_3_0_0_0_778_phi_fu_549_p4}, {ap_phi_mux_p_0_0_0_0_0_751_phi_fu_569_p4}}, {ap_phi_reg_pp0_iter1_p_0_3_0_0_0_770_reg_506}}, {ap_phi_reg_pp0_iter1_p_0_0_0_0_0_743_reg_526}}, {p_0_3_0_0_0_771_reg_463}}, {p_0_0_0_0_0_744_reg_485}}, {p_0_3_0_0_0_772_reg_419}}, {p_0_0_0_0_0_745_reg_441}}, {p_0_3_0_0_0_773_reg_375}}, {p_0_0_0_0_0_746_reg_397}}, {p_0_3_0_0_0_774_reg_331}}, {p_0_0_0_0_0_747_reg_353}}, {p_0_3_0_0_0_775_reg_287}}, {p_0_0_0_0_0_748_reg_309}}, {p_0_3_0_0_0_776_reg_246}}, {p_0_0_0_0_0_749_reg_266}};

assign bytePlanes_plane12_din = {{{{{{{{{{{{{{{{ap_phi_mux_p_0_4_0_0_0_787_phi_fu_539_p4}, {ap_phi_mux_p_0_1_0_0_0_760_phi_fu_559_p4}}, {ap_phi_reg_pp0_iter1_p_0_4_0_0_0_779_reg_496}}, {ap_phi_reg_pp0_iter1_p_0_1_0_0_0_752_reg_516}}, {p_0_4_0_0_0_780_reg_452}}, {p_0_1_0_0_0_753_reg_474}}, {p_0_4_0_0_0_781_reg_408}}, {p_0_1_0_0_0_754_reg_430}}, {p_0_4_0_0_0_782_reg_364}}, {p_0_1_0_0_0_755_reg_386}}, {p_0_4_0_0_0_783_reg_320}}, {p_0_1_0_0_0_756_reg_342}}, {p_0_4_0_0_0_784_reg_276}}, {p_0_1_0_0_0_757_reg_298}}, {p_0_4_0_0_0_785_reg_236}}, {p_0_1_0_0_0_758_reg_256}};

assign cmp51_fu_711_p2 = (($signed(zext_ln586_fu_707_p1) < $signed(sub50_cast38_cast_fu_663_p1)) ? 1'b1 : 1'b0);

assign icmp_ln586_fu_695_p2 = ((ap_sig_allocacmp_x_1 == trunc_ln571_1) ? 1'b1 : 1'b0);

assign or_ln590_1_fu_732_p2 = (cmp53_1 | cmp51_reg_996);

assign or_ln590_2_fu_752_p2 = (cmp53_2 | cmp51_reg_996);

assign or_ln590_3_fu_760_p2 = (cmp53_3 | cmp51_reg_996);

assign or_ln590_4_fu_768_p2 = (cmp53_4 | cmp51_reg_996);

assign or_ln590_5_fu_772_p2 = (cmp53_5 | cmp51_reg_996);

assign or_ln590_6_fu_776_p2 = (cmp53_6 | cmp51_reg_996);

assign or_ln590_7_fu_780_p2 = (icmp_ln576 | cmp51_reg_996);

assign or_ln590_fu_717_p2 = (cmp53 | cmp51_fu_711_p2);

assign p_0_0_0_0_0_750_out = p_0_0_0_0_0_750_fu_110;

assign p_0_1_0_0_0_759_out = p_0_1_0_0_0_759_fu_114;

assign p_0_3_0_0_0_777_out = p_0_3_0_0_0_777_fu_118;

assign p_0_4_0_0_0_786_out = p_0_4_0_0_0_786_fu_122;

assign sub50_cast38_cast_fu_663_p1 = $signed(sub50_cast38);

assign trunc_ln145_11_fu_784_p1 = img_dout[7:0];

assign trunc_ln145_14_fu_788_p1 = img_dout[7:0];

assign trunc_ln145_17_fu_792_p1 = img_dout[7:0];

assign trunc_ln145_20_fu_796_p1 = img_dout[7:0];

assign trunc_ln145_4_fu_748_p1 = img_dout[7:0];

assign trunc_ln145_5_fu_756_p1 = img_dout[7:0];

assign trunc_ln145_8_fu_764_p1 = img_dout[7:0];

assign trunc_ln145_fu_728_p1 = img_dout[7:0];

assign x_2_fu_701_p2 = (ap_sig_allocacmp_x_1 + 12'd1);

assign zext_ln586_fu_707_p1 = ap_sig_allocacmp_x_1;

endmodule //kv260_ispMipiRx_vcu_DP_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_586_1
